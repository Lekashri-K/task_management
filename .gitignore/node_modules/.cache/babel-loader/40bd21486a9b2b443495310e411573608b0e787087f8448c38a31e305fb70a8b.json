{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000/api';\nexport const login = async (username, password) => {\n  const response = await axios.post(`${API_URL}/login/`, {\n    username,\n    password\n  });\n  if (response.data.access) {\n    localStorage.setItem('user', JSON.stringify(response.data.user));\n    localStorage.setItem('access_token', response.data.access);\n    localStorage.setItem('refresh_token', response.data.refresh);\n  }\n  return response.data.user;\n};\nexport const getCurrentUser = () => {\n  const userData = localStorage.getItem('user');\n  return userData ? JSON.parse(userData) : null;\n};\nexport const logout = () => {\n  localStorage.removeItem('user');\n  localStorage.removeItem('access_token');\n  localStorage.removeItem('refresh_token');\n};\naxios.defaults.withCredentials = true;\naxios.defaults.headers.common['Content-Type'] = 'application/json';","map":{"version":3,"names":["axios","API_URL","login","username","password","response","post","data","access","localStorage","setItem","JSON","stringify","user","refresh","getCurrentUser","userData","getItem","parse","logout","removeItem","defaults","withCredentials","headers","common"],"sources":["D:/task_management/frontend/src/utils/auth.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8000/api';\r\n\r\nexport const login = async (username, password) => {\r\n  const response = await axios.post(`${API_URL}/login/`, { username, password });\r\n  if (response.data.access) {\r\n    localStorage.setItem('user', JSON.stringify(response.data.user));\r\n    localStorage.setItem('access_token', response.data.access);\r\n    localStorage.setItem('refresh_token', response.data.refresh);\r\n  }\r\n  return response.data.user;\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n  const userData = localStorage.getItem('user');\r\n  return userData ? JSON.parse(userData) : null;\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem('user');\r\n  localStorage.removeItem('access_token');\r\n  localStorage.removeItem('refresh_token');\r\n};\r\n\r\naxios.defaults.withCredentials = true;\r\naxios.defaults.headers.common['Content-Type'] = 'application/json';\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACjD,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,SAAS,EAAE;IAAEE,QAAQ;IAAEC;EAAS,CAAC,CAAC;EAC9E,IAAIC,QAAQ,CAACE,IAAI,CAACC,MAAM,EAAE;IACxBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACE,IAAI,CAACM,IAAI,CAAC,CAAC;IAChEJ,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEL,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC;IAC1DC,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEL,QAAQ,CAACE,IAAI,CAACO,OAAO,CAAC;EAC9D;EACA,OAAOT,QAAQ,CAACE,IAAI,CAACM,IAAI;AAC3B,CAAC;AAED,OAAO,MAAME,cAAc,GAAGA,CAAA,KAAM;EAClC,MAAMC,QAAQ,GAAGP,YAAY,CAACQ,OAAO,CAAC,MAAM,CAAC;EAC7C,OAAOD,QAAQ,GAAGL,IAAI,CAACO,KAAK,CAACF,QAAQ,CAAC,GAAG,IAAI;AAC/C,CAAC;AAED,OAAO,MAAMG,MAAM,GAAGA,CAAA,KAAM;EAC1BV,YAAY,CAACW,UAAU,CAAC,MAAM,CAAC;EAC/BX,YAAY,CAACW,UAAU,CAAC,cAAc,CAAC;EACvCX,YAAY,CAACW,UAAU,CAAC,eAAe,CAAC;AAC1C,CAAC;AAEDpB,KAAK,CAACqB,QAAQ,CAACC,eAAe,GAAG,IAAI;AACrCtB,KAAK,CAACqB,QAAQ,CAACE,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC,GAAG,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}